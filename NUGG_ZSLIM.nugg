<?xml version="1.0" encoding="utf-16"?>
<nugget name="ZSLIM">
 <CLAS CLSNAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" DESCRIPT="ZCX_SYNTAX_ERROR" UUID="537A3F3000A91200E10080000A01314D" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CX_STATIC_CHECK">
  <publicSection>class ZCX_SYNTAX_ERROR definition
  public
  inheriting from CX_STATIC_CHECK
  final
  create public .

*&quot;* public components of class ZCX_SYNTAX_ERROR
*&quot;* do not include other source files here!!!
public section.

  constants EMPTY_STRING type SOTR_CONC value &apos;537A3F4600A91200E10080000A01314D&apos;. &quot;#EC NOTEXT
  constants NO_ENDING type SOTR_CONC value &apos;537A3F4700A91200E10080000A01314D&apos;. &quot;#EC NOTEXT
  constants NO_STARTING type SOTR_CONC value &apos;537A3F4800A91200E10080000A01314D&apos;. &quot;#EC NOTEXT
  constants NOT_TERMINATED_BY_COLON type SOTR_CONC value &apos;537A3F4900A91200E10080000A01314D&apos;. &quot;#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional .</publicSection>
  <protectedSection>*&quot;* protected components of class ZCX_SYNTAX_ERROR
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZCX_SYNTAX_ERROR
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCX_SYNTAX_ERROR" CMPNAME="EMPTY_STRING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;537A3F4600A91200E10080000A01314D&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="700" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="TETREAUL_SAP" CREA_TSTUT="20140520054507" CHAN_NAME="TETREAUL_SAP" CHAN_TSTUT="20140520054507" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="TETREAUL_SAP" CREA_TSTUT="20140520054507" CHAN_NAME="TETREAUL_SAP" CHAN_TSTUT="20140520054507" STATUS="R" VERSION="0002" LENGTH="255" TEXT="EMPTY_STRING"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SYNTAX_ERROR" CMPNAME="NOT_TERMINATED_BY_COLON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;537A3F4900A91200E10080000A01314D&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="700" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="TETREAUL_SAP" CREA_TSTUT="20140520054508" CHAN_NAME="TETREAUL_SAP" CHAN_TSTUT="20140520054508" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="TETREAUL_SAP" CREA_TSTUT="20140520054508" CHAN_NAME="TETREAUL_SAP" CHAN_TSTUT="20140520054508" STATUS="R" VERSION="0002" LENGTH="255" TEXT="NOT_TERMINATED_BY_COLON"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SYNTAX_ERROR" CMPNAME="NO_ENDING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;537A3F4700A91200E10080000A01314D&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="700" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="TETREAUL_SAP" CREA_TSTUT="20140520054507" CHAN_NAME="TETREAUL_SAP" CHAN_TSTUT="20140520054507" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="TETREAUL_SAP" CREA_TSTUT="20140520054507" CHAN_NAME="TETREAUL_SAP" CHAN_TSTUT="20140520054507" STATUS="R" VERSION="0002" LENGTH="255" TEXT="NO_ENDING"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SYNTAX_ERROR" CMPNAME="NO_STARTING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;537A3F4800A91200E10080000A01314D&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="700" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="TETREAUL_SAP" CREA_TSTUT="20140520054508" CHAN_NAME="TETREAUL_SAP" CHAN_TSTUT="20140520054508" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="TETREAUL_SAP" CREA_TSTUT="20140520054508" CHAN_NAME="TETREAUL_SAP" CHAN_TSTUT="20140520054508" STATUS="R" VERSION="0002" LENGTH="255" TEXT="NO_STARTING"/>
   </sotr>
  </attribute>
  <inheritance CLSNAME="ZCX_SYNTAX_ERROR" REFCLSNAME="CX_STATIC_CHECK" VERSION="1" STATE="1" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
  <method CLSNAME="ZCX_SYNTAX_ERROR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_SYNTAX_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_SYNTAX_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
.
endmethod.</source>
   <methodDocumentation/>
   <methodDocumentation/>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION_NOOP" VERSION="1" LANGU="E" DESCRIPT="NO Operation Instruction" UUID="537A3DCE00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_INSTRUCTION">
  <publicSection>CLASS zcl_instruction_noop DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC
  INHERITING FROM zcl_instruction.

  PUBLIC SECTION.</publicSection>
  <protectedSection>PROTECTED SECTION.
    METHODS: executeinternal REDEFINITION.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <inheritance CLSNAME="ZCL_INSTRUCTION_NOOP" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" STATE="1" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000">
   <redefinition CLSNAME="ZCL_INSTRUCTION_NOOP" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" MTDNAME="EXECUTEINTERNAL"/>
  </inheritance>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTEINTERNAL" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method EXECUTEINTERNAL.
    DATA: id TYPE string.
    id = get_id( ).
    zcl_instruction_result=&gt;void( id ).
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION" VERSION="1" LANGU="E" DESCRIPT="Instruction Abstract Class" UUID="537A3DC800A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140514" CHANGEDON="00000000" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_instruction DEFINITION PUBLIC.
  PUBLIC SECTION.
    CLASS-METHODS: class_constructor.
    CLASS-DATA: noop_instruction TYPE REF TO zcl_instruction_noop,
                noop TYPE string VALUE &apos;NOOP&apos;.
    METHODS: constructor IMPORTING id TYPE string,
             get_id RETURNING VALUE(id) TYPE string,
             execute IMPORTING executor TYPE REF TO zcl_slim_statement_executor
                     RETURNING VALUE(result) TYPE REF TO zcl_instruction_result,
             tostring RETURNING VALUE(str) TYPE string,
             equals IMPORTING o TYPE REF TO object
                    RETURNING VALUE(flag) TYPE flag.</publicSection>
  <protectedSection>PROTECTED SECTION.
    METHODS: executeinternal IMPORTING executor TYPE REF TO zcl_slim_statement_executor
                             RETURNING VALUE(result) TYPE REF TO zcl_instruction_result.

    DATA: id TYPE string.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_INSTRUCTION" CMPNAME="ID" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION" CMPNAME="NOOP" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="1" ATTVALUE="&apos;NOOP&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION" CMPNAME="NOOP_INSTRUCTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_NOOP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CLASS_CONSTRUCTOR.
    CREATE OBJECT noop_instruction EXPORTING id = noop.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="CONSTRUCTOR" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method CONSTRUCTOR.
    me-&gt;id = id.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="EQUALS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="EQUALS" SCONAME="O" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="EQUALS" SCONAME="FLAG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>method EQUALS.
    IF me EQ o.
      flag = &apos;X&apos;.
    ENDIF.

    DATA: typedesc TYPE REF TO cl_abap_typedescr.
    typedesc = cl_abap_typedescr=&gt;describe_by_object_ref( o ).
    IF typedesc-&gt;absolute_name NE &apos;ZCL_INSTRUCTION&apos;.
      RETURN.
    ENDIF.

    DATA: lo_instruction TYPE REF TO zcl_instruction.
    lo_instruction ?= o.
    IF me-&gt;id EQ lo_instruction-&gt;id.
      flag = &apos;X&apos;.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTE" SCONAME="EXECUTOR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_SLIM_STATEMENT_EXECUTOR"/>
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTE" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_RESULT"/>
   <source>method EXECUTE.
    TRY.
        result = executeinternal( executor ).
      CATCH cx_root. &quot;#EC CATCH_ALL
        DATA: id TYPE string.
        id = get_id( ).
        result = zcl_instruction_result=&gt;error( id ).
    ENDTRY.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTEINTERNAL" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTEINTERNAL" SCONAME="EXECUTOR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_SLIM_STATEMENT_EXECUTOR"/>
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTEINTERNAL" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_RESULT"/>
   <source>METHOD executeinternal.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="GET_ID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="GET_ID" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method GET_ID.
    id = me-&gt;id.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="TOSTRING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION" CMPNAME="TOSTRING" SCONAME="STR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method TOSTRING.
    DATA: id TYPE string.
    id = get_id( ).

    str = &apos;Instruction&apos;. &quot;#EC NOTEXT
    CONCATENATE str &apos;{id=&apos;&apos;&apos; INTO str.
    CONCATENATE str id INTO str.
    CONCATENATE str &apos;\&apos;&apos;&apos; INTO str.
    CONCATENATE str &apos;}&apos; INTO str.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION_INVALID" VERSION="1" LANGU="E" DESCRIPT="Invalid Instruction" UUID="537A3DC200A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_INSTRUCTION">
  <publicSection>CLASS zcl_instruction_invalid DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC
  INHERITING FROM zcl_instruction.

  PUBLIC SECTION.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <inheritance CLSNAME="ZCL_INSTRUCTION_INVALID" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" STATE="1" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION_CALL" VERSION="1" LANGU="E" DESCRIPT="Call" UUID="537A3DBC00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_INSTRUCTION">
  <publicSection>CLASS zcl_instruction_call DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC INHERITING FROM zcl_instruction.

  PUBLIC SECTION.
    METHODS: constructor IMPORTING id TYPE string
                                    instancename TYPE string
                                    methodname TYPE string
                                    args type ref to zcl_data_list.
    CONSTANTS: instruction TYPE string VALUE &apos;CALL&apos;.</publicSection>
  <protectedSection>PROTECTED SECTION.
    METHODS: executeinternal REDEFINITION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: instancename TYPE string,
          methodname TYPE string,
          args type ref to zcl_data_list.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="ARGS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_DATA_LIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="INSTANCENAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="INSTRUCTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;CALL&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="METHODNAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_INSTRUCTION_CALL" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" STATE="1" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000">
   <redefinition CLSNAME="ZCL_INSTRUCTION_CALL" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" MTDNAME="EXECUTEINTERNAL"/>
  </inheritance>
  <method CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="CONSTRUCTOR" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="CONSTRUCTOR" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="CONSTRUCTOR" SCONAME="METHODNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_CALL" CMPNAME="CONSTRUCTOR" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <source>method CONSTRUCTOR.
    super-&gt;constructor( id ).
    me-&gt;instancename = instancename.
    me-&gt;methodname = methodname.
    me-&gt;args = args.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTEINTERNAL" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method EXECUTEINTERNAL.
    DATA: result_string TYPE string.
    result_string = executor-&gt;call( instancename = instancename methodname = methodname args = args ).

    CREATE OBJECT result
      EXPORTING
        id     = id
        result = result_string.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION_MAKE" VERSION="1" LANGU="E" DESCRIPT="Make Instruction" UUID="537A3DB600A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_INSTRUCTION">
  <publicSection>CLASS zcl_instruction_make DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC INHERITING FROM zcl_instruction .

  PUBLIC SECTION.
    CONSTANTS: instruction TYPE string VALUE &apos;MAKE&apos;.
    METHODS: constructor IMPORTING id TYPE string
                                   instancename TYPE string
                                   classname TYPE string
                                   args TYPE REF TO zcl_data_list.</publicSection>
  <protectedSection>PROTECTED SECTION.
    METHODS: executeinternal REDEFINITION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: instancename TYPE string,
          classname TYPE string,
          args TYPE REF TO zcl_data_list.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="ARGS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_DATA_LIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="CLASSNAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="INSTANCENAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="INSTRUCTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;MAKE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_INSTRUCTION_MAKE" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" STATE="1" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000">
   <redefinition CLSNAME="ZCL_INSTRUCTION_MAKE" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" MTDNAME="EXECUTEINTERNAL"/>
  </inheritance>
  <method CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="CONSTRUCTOR" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="CONSTRUCTOR" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="CONSTRUCTOR" SCONAME="CLASSNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_MAKE" CMPNAME="CONSTRUCTOR" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <source>method CONSTRUCTOR.
    super-&gt;constructor( id ).
    me-&gt;instancename = instancename.
    me-&gt;classname = classname.
    me-&gt;args = args.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTEINTERNAL" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD executeinternal.
  executor-&gt;create(  instancename = instancename classname = classname args = args ).
  result = zcl_instruction_result=&gt;ok( id ).
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION_RESULT" VERSION="1" LANGU="E" DESCRIPT="Instruction result" UUID="537A3DB000A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140514" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_instruction_result DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.


    CLASS-METHODS: void IMPORTING id TYPE string
                        RETURNING VALUE(result) TYPE REF TO zcl_instruction_result,
                   ok IMPORTING id TYPE string
                      RETURNING VALUE(result) TYPE REF TO zcl_instruction_result,
                   error IMPORTING id TYPE string
                         RETURNING VALUE(result) TYPE REF TO zcl_instruction_result.

    METHODS: constructor IMPORTING id TYPE string
                                   result TYPE string,
             getid RETURNING VALUE(id) TYPE string,
             getresult RETURNING VALUE(result) TYPE string,
             hasresult RETURNING VALUE(flag) TYPE flag,
             haserror RETURNING VALUE(flag) TYPE flag.

    DATA: id TYPE string,
          result TYPE string.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="ID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="RESULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="CONSTRUCTOR" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="CONSTRUCTOR" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD constructor.
  me-&gt;id = id.
  me-&gt;result = result.
  CONDENSE me-&gt;result.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="ERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="ERROR" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="ERROR" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_RESULT"/>
   <source>method ERROR.
    CREATE OBJECT result
      EXPORTING
        id     = id
        result = &apos;/__ERROR__/&apos;.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="GETID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="GETID" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method GETID.
    id = me-&gt;id.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="GETRESULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="GETRESULT" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method GETRESULT.
    result = me-&gt;result.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="HASERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="HASERROR" SCONAME="FLAG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>method HASERROR.
    IF result = &apos;/__ERROR__/&apos;.
      flag = &apos;X&apos;.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="HASRESULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="HASRESULT" SCONAME="FLAG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>method HASRESULT.
    IF me-&gt;result = &apos;/__VOID__/&apos; OR result = &apos;/__ERROR__/&apos;.
      RETURN.
    ENDIF.

    IF me-&gt;result IS NOT INITIAL.
      flag = &apos;X&apos;.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="OK" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="OK" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="OK" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_RESULT"/>
   <source>method OK.
    CREATE OBJECT result
      EXPORTING
        id     = id
        result = &apos;OK&apos;.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="VOID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="VOID" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_RESULT" CMPNAME="VOID" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_RESULT"/>
   <source>method VOID.
    CREATE OBJECT result
      EXPORTING
        id     = id
        result = &apos;/__VOID__/&apos;.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION_FACTORY" VERSION="1" LANGU="E" DESCRIPT="Instruction Factory" UUID="537A3DAA00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140514" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_INSTRUCTION_FACTORY definition
  public
  final
  create public .

*&quot;* public components of class ZCL_INSTRUCTION_FACTORY
*&quot;* do not include other source files here!!!
public section.

  class-methods CREATEINSTRUCTION
    importing
      !WORDS type ref to ZCL_OBJECT_LIST
    returning
      value(INSTRUCTION) type ref to ZCL_INSTRUCTION
    raising
      ZCX_SYNTAX_ERROR .</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>*&quot;* private components of class ZCL_INSTRUCTION_FACTORY
*&quot;* do not include other source files here!!!
private section.

  class-methods GETWORD
    importing
      !WORDS type ref to ZCL_OBJECT_LIST
      !I type I
    returning
      value(WORD) type STRING
    raising
      ZCX_SYNTAX_ERROR .
  class-methods CREATEMAKEINSTRUCTION
    importing
      !ID type STRING
      !WORDS type ref to ZCL_OBJECT_LIST
    returning
      value(INSTRUCTION) type ref to ZCL_INSTRUCTION_MAKE
    raising
      ZCX_SYNTAX_ERROR .
  class-methods CREATECALLANDASSIGN
    importing
      !ID type STRING
      !WORDS type ref to ZCL_OBJECT_LIST
    returning
      value(INSTRUCTION) type ref to ZCL_INSTRUCTION_CALLASSIGN
    raising
      ZCX_SYNTAX_ERROR .
  class-methods CREATECALLINSTRUCTION
    importing
      !ID type STRING
      !WORDS type ref to ZCL_OBJECT_LIST
    returning
      value(INSTRUCTION) type ref to ZCL_INSTRUCTION_CALL
    raising
      ZCX_SYNTAX_ERROR .
  class-methods MAKEARGSARRAY
    importing
      !WORDS type ref to ZCL_OBJECT_LIST
      !I type I
    returning
      value(ARGS) type ref to ZCL_DATA_LIST .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <method CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLANDASSIGN" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140630" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLANDASSIGN" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLANDASSIGN" SCONAME="WORDS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLANDASSIGN" SCONAME="INSTRUCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_CALLASSIGN"/>
   <exception CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLANDASSIGN" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" DESCRIPT="ZCX_SYNTAX_ERROR" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000"/>
   <source>method CREATECALLANDASSIGN.
    DATA: symbolname TYPE string,
          instancename TYPE string,
          methodname TYPE string,
          args type ref to zcl_data_list.

    symbolname = getword( words = words i = 2 ).
    instancename = getword( words = words i = 3 ).
    methodname = getword( words = words i = 4 ).
    args = makeargsarray( words = words i = 5 ).

    CREATE OBJECT instruction
      TYPE zcl_instruction_callassign
      EXPORTING
        id           = id
        symbolname   = symbolname
        instancename = instancename
        methodname   = methodname
        args         = args.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLINSTRUCTION" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140630" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLINSTRUCTION" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLINSTRUCTION" SCONAME="WORDS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLINSTRUCTION" SCONAME="INSTRUCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_CALL"/>
   <exception CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATECALLINSTRUCTION" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" DESCRIPT="ZCX_SYNTAX_ERROR" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000"/>
   <source>method CREATECALLINSTRUCTION.
    DATA: instancename TYPE string,
          methodname TYPE string,
          args type ref to zcl_data_list.

    instancename = getword( words = words i = 2 ).
    methodname = getword( words = words i = 3 ).
    args = makeargsarray( words = words i = 4 ).

    CREATE OBJECT instruction
      TYPE zcl_instruction_call
      EXPORTING
        id           = id
        instancename = instancename
        methodname   = methodname
        args         = args.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEINSTRUCTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140630" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEINSTRUCTION" SCONAME="WORDS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEINSTRUCTION" SCONAME="INSTRUCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION"/>
   <exception CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEINSTRUCTION" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" DESCRIPT="ZCX_SYNTAX_ERROR" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000"/>
   <source>method CREATEINSTRUCTION.
    DATA: id TYPE string,
          operation TYPE string.

    id = getword( words = words i = 0 ).
    operation = getword( words = words i = 1 ).
    TRANSLATE operation TO UPPER CASE.

    IF zcl_instruction_make=&gt;instruction EQ operation.
      instruction = createmakeinstruction( id = id words = words ).
    ELSEIF zcl_instruction_callassign=&gt;instruction EQ operation.
      instruction = createcallandassign( id = id words = words ).
    ELSEIF zcl_instruction_call=&gt;instruction EQ operation.
      instruction = createcallinstruction( id = id words = words ).
*    ELSEIF zcl_instruction_import=&gt;instruction EQ operation.
*      instruction = createimportinstruction( id = id words = words ).
    ELSE.
      CREATE OBJECT instruction TYPE zcl_instruction_invalid EXPORTING id = id.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEMAKEINSTRUCTION" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140630" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEMAKEINSTRUCTION" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEMAKEINSTRUCTION" SCONAME="WORDS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEMAKEINSTRUCTION" SCONAME="INSTRUCTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_INSTRUCTION_MAKE"/>
   <exception CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="CREATEMAKEINSTRUCTION" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" DESCRIPT="ZCX_SYNTAX_ERROR" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000"/>
   <source>method CREATEMAKEINSTRUCTION.
    DATA: instancename TYPE string,
          classname TYPE string,
          args type ref to zcl_data_list.

    instancename = getword( words = words i = 2 ).
    classname = getword( words = words i = 3 ).
    args = makeargsarray( words = words i = 4 ).

    CREATE OBJECT instruction
      TYPE zcl_instruction_make
      EXPORTING
        id           = id
        instancename = instancename
        classname    = classname
        args         = args.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="GETWORD" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140630" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="GETWORD" SCONAME="WORDS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="GETWORD" SCONAME="I" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="GETWORD" SCONAME="WORD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <exception CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="GETWORD" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" DESCRIPT="ZCX_SYNTAX_ERROR" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000"/>
   <source>method GETWORD.
    DATA: index TYPE i,
          s TYPE REF TO ZCL_STRING.
    index = i + 1.

    s ?= words-&gt;get( index ).
    IF sy-subrc NE 0.
      RAISE EXCEPTION TYPE zcx_syntax_error.
    ENDIF.
    word = s-&gt;string.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="MAKEARGSARRAY" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140630" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="MAKEARGSARRAY" SCONAME="WORDS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="MAKEARGSARRAY" SCONAME="I" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_FACTORY" CMPNAME="MAKEARGSARRAY" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <source>method MAKEARGSARRAY.
    DATA: index TYPE i,
          size TYPE i,
          sublist TYPE REF TO zcl_object_list.

    index = i + 1.
    size = words-&gt;size( ).
    sublist = words-&gt;sublist( fromindex = index toindex = size ).
    args = sublist-&gt;toarray( ).

endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION_IMPORT" VERSION="1" LANGU="E" DESCRIPT="Import Instruction" UUID="537A3DA400A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_INSTRUCTION">
  <publicSection>CLASS zcl_instruction_import DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC INHERITING FROM zcl_instruction .

  PUBLIC SECTION.
    METHODS: constructor IMPORTING id TYPE string
                                   path TYPE string.
    CONSTANTS: instruction TYPE string VALUE &apos;IMPORT&apos;.</publicSection>
  <protectedSection>PROTECTED SECTION.
    METHODS: executeinternal REDEFINITION.</protectedSection>
  <privateSection>*&quot;* private components of class ZCL_INSTRUCTION_IMPORT
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_INSTRUCTION_IMPORT" CMPNAME="INSTRUCTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;IMPORT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_INSTRUCTION_IMPORT" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" STATE="1" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000">
   <redefinition CLSNAME="ZCL_INSTRUCTION_IMPORT" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" MTDNAME="EXECUTEINTERNAL"/>
  </inheritance>
  <method CLSNAME="ZCL_INSTRUCTION_IMPORT" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_IMPORT" CMPNAME="CONSTRUCTOR" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_IMPORT" CMPNAME="CONSTRUCTOR" SCONAME="PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method CONSTRUCTOR.
    super-&gt;constructor( id ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTEINTERNAL" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD executeinternal.
  result = zcl_instruction_result=&gt;ok( id ).
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" VERSION="1" LANGU="E" DESCRIPT="Call and Assign" UUID="537A3D9E00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_INSTRUCTION">
  <publicSection>CLASS zcl_instruction_callassign DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC INHERITING FROM zcl_instruction.

  PUBLIC SECTION.
    METHODS: constructor IMPORTING id TYPE string
                                    symbolname TYPE string
                                    instancename TYPE string
                                    methodname TYPE string
                                    args type ref to zcl_data_list.
    CONSTANTS: instruction TYPE string VALUE &apos;CALLANDASSIGN&apos;.</publicSection>
  <protectedSection>PROTECTED SECTION.
    METHODS: executeinternal REDEFINITION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: symbolname TYPE string,
          instancename TYPE string,
          methodname TYPE string,
          args type ref to zcl_data_list.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="ARGS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_DATA_LIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="INSTANCENAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="INSTRUCTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;CALLANDASSIGN&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="METHODNAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="SYMBOLNAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" STATE="1" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000">
   <redefinition CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" REFCLSNAME="ZCL_INSTRUCTION" VERSION="1" MTDNAME="EXECUTEINTERNAL"/>
  </inheritance>
  <method CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="CONSTRUCTOR" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="CONSTRUCTOR" SCONAME="SYMBOLNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="CONSTRUCTOR" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="CONSTRUCTOR" SCONAME="METHODNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_INSTRUCTION_CALLASSIGN" CMPNAME="CONSTRUCTOR" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <source>method CONSTRUCTOR.
    super-&gt;constructor( id ).
    me-&gt;symbolname = symbolname.
    me-&gt;instancename = instancename.
    me-&gt;methodname = methodname.
    me-&gt;args = args.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_INSTRUCTION" CMPNAME="EXECUTEINTERNAL" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD executeinternal.
  DATA: result_string TYPE string.
  result_string = executor-&gt;callandassign( symbolname = symbolname instancename = instancename methodname = methodname args = args ).

  CREATE OBJECT result
    EXPORTING
      id     = id
      result = result_string.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" VERSION="1" LANGU="E" DESCRIPT="Login Dialog Driver" UUID="537A3D9800A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_LOGIN_DIALOG_DRIVER definition
  public
  final
  create public .

*&quot;* public components of class ZCL_LOGIN_DIALOG_DRIVER
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .

  methods CONSTRUCTOR
    importing
      !USERNAME type STRING
      !PASSWORD type STRING .
  methods LOGINWITHUSERNAMEANDPASSWORD
    importing
      !USERNAME type STRING
      !PASSWORD type STRING
    returning
      value(RESULT) type ABAP_BOOL .
  methods LOGINMESSAGE
    returning
      value(MESSAGE) type STRING .
  methods NUMBEROFLOGINATTEMPTS
    returning
      value(NUM) type I .</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: username TYPE string,
          password TYPE string,
          message TYPE string,
          loginattempts TYPE i.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <typeUsage CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="LOGINATTEMPTS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="MESSAGE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="PASSWORD" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="USERNAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="CONSTRUCTOR" SCONAME="USERNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="CONSTRUCTOR" SCONAME="PASSWORD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method CONSTRUCTOR.
    me-&gt;username = username.
    me-&gt;password = password.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="LOGINMESSAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="LOGINMESSAGE" SCONAME="MESSAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method LOGINMESSAGE.
    message = me-&gt;message.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="LOGINWITHUSERNAMEANDPASSWORD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="LOGINWITHUSERNAMEANDPASSWORD" SCONAME="USERNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="LOGINWITHUSERNAMEANDPASSWORD" SCONAME="PASSWORD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="LOGINWITHUSERNAMEANDPASSWORD" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>method LOGINWITHUSERNAMEANDPASSWORD.
    ADD 1 TO loginattempts.

    IF me-&gt;username EQ username AND me-&gt;password EQ password.
      result = abap_true.
    ENDIF.

    IF result EQ abap_true.
      CONCATENATE me-&gt;username &apos; logged in.&apos; INTO message RESPECTING BLANKS.
    ELSE.
      CONCATENATE me-&gt;username &apos; not logged in.&apos; INTO message RESPECTING BLANKS.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="NUMBEROFLOGINATTEMPTS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_LOGIN_DIALOG_DRIVER" CMPNAME="NUMBEROFLOGINATTEMPTS" SCONAME="NUM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="I"/>
   <source>method NUMBEROFLOGINATTEMPTS.
    num = me-&gt;loginattempts.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_TEST_SLIM" VERSION="1" LANGU="E" DESCRIPT="Test Slim" UUID="537A3D9200A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_test_slim DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS: setstring IMPORTING arg TYPE string,
             getstringarg RETURNING VALUE(arg) TYPE string,
             echostring IMPORTING s TYPE string
                        RETURNING VALUE(ret) TYPE string.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: stringarg TYPE string.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_TEST_SLIM" CMPNAME="STRINGARG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_TEST_SLIM" CMPNAME="ECHOSTRING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_TEST_SLIM" CMPNAME="ECHOSTRING" SCONAME="S" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_TEST_SLIM" CMPNAME="ECHOSTRING" SCONAME="RET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method ECHOSTRING.
    ret = s.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_TEST_SLIM" CMPNAME="GETSTRINGARG" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_TEST_SLIM" CMPNAME="GETSTRINGARG" SCONAME="ARG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method GETSTRINGARG.
    arg = stringarg.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_TEST_SLIM" CMPNAME="SETSTRING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_TEST_SLIM" CMPNAME="SETSTRING" SCONAME="ARG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method SETSTRING.
    stringarg = arg.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_DUMMY_TABLE_RETURNS_NULL" VERSION="1" LANGU="E" UUID="53B109E15FBE0A40E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_DUMMY_TABLE_RETURNS_NULL definition
  public
  final
  create public .

*&quot;* public components of class ZCL_DUMMY_TABLE_RETURNS_NULL
*&quot;* do not include other source files here!!!
public section.

  methods DOTABLE
    importing
      !TABLE type STRING
    returning
      value(NULL) type STRING .</publicSection>
  <protectedSection>*&quot;* protected components of class ZCL_DUMMY_TABLE_RETURNS_NULL
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZCL_DUMMY_TABLE_RETURNS_NULL
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <method CLSNAME="ZCL_DUMMY_TABLE_RETURNS_NULL" CMPNAME="DOTABLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_DUMMY_TABLE_RETURNS_NULL" CMPNAME="DOTABLE" SCONAME="TABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_DUMMY_TABLE_RETURNS_NULL" CMPNAME="DOTABLE" SCONAME="NULL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD dotable.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_FIXTURE_DIVISION" VERSION="1" LANGU="E" DESCRIPT="Division Fixture" UUID="537A3D8600A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140516" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_fixture_division DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS: setnumerator IMPORTING num TYPE BCWHR,
             setdenominator IMPORTING den TYPE BCWHR,
             quotient RETURNING VALUE(quotient) TYPE BCWHR.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: _numerator TYPE BCWHR,
          _denominator TYPE BCWHR.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_FIXTURE_DIVISION" CMPNAME="_DENOMINATOR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BCWHR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_FIXTURE_DIVISION" CMPNAME="_NUMERATOR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BCWHR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_FIXTURE_DIVISION" CMPNAME="QUOTIENT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FIXTURE_DIVISION" CMPNAME="QUOTIENT" SCONAME="QUOTIENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="BCWHR"/>
   <source>method QUOTIENT.
    quotient = _numerator / _denominator.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_FIXTURE_DIVISION" CMPNAME="SETDENOMINATOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FIXTURE_DIVISION" CMPNAME="SETDENOMINATOR" SCONAME="DEN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BCWHR"/>
   <source>method SETDENOMINATOR.
    me-&gt;_denominator = den.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_FIXTURE_DIVISION" CMPNAME="SETNUMERATOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FIXTURE_DIVISION" CMPNAME="SETNUMERATOR" SCONAME="NUM" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BCWHR"/>
   <source>method SETNUMERATOR.
    me-&gt;_numerator = num.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_ECHO_FIXTURE" VERSION="1" LANGU="E" DESCRIPT="Echo Fixture" UUID="537A3D8000A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140517" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_echo_fixture DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS: echo IMPORTING i_s TYPE string
                  RETURNING VALUE(r_s) TYPE string,
             setname IMPORTING s TYPE string,
             name RETURNING VALUE(s) TYPE string.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: _name TYPE string.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_ECHO_FIXTURE" CMPNAME="_NAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_ECHO_FIXTURE" CMPNAME="ECHO" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_ECHO_FIXTURE" CMPNAME="ECHO" SCONAME="I_S" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_ECHO_FIXTURE" CMPNAME="ECHO" SCONAME="R_S" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method ECHO.
    r_s = i_s.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_ECHO_FIXTURE" CMPNAME="NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_ECHO_FIXTURE" CMPNAME="NAME" SCONAME="S" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method NAME.
    s = _name.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_ECHO_FIXTURE" CMPNAME="SETNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_ECHO_FIXTURE" CMPNAME="SETNAME" SCONAME="S" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method SETNAME.
    _name = s.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_SLIM" VERSION="1" LANGU="E" DESCRIPT="ABAP Slim" UUID="537A3D5400A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140513" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_SLIM definition
  public
  final
  create public .

*&quot;* public components of class ZCL_SLIM
*&quot;* do not include other source files here!!!
public section.

  class-methods MAIN
    importing
      !INSTRUCTIONS type STRING
    returning
      value(SERIALIZED) type STRING
    raising
      ZCX_SYNTAX_ERROR .</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <method CLSNAME="ZCL_SLIM" CMPNAME="MAIN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140630" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM" CMPNAME="MAIN" SCONAME="INSTRUCTIONS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM" CMPNAME="MAIN" SCONAME="SERIALIZED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <exception CLSNAME="ZCL_SLIM" CMPNAME="MAIN" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" DESCRIPT="ZCX_SYNTAX_ERROR" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000"/>
   <source>method MAIN.
    DATA: statements TYPE REF TO zcl_object_list,
          results TYPE REF TO zcl_object_list,
          formattedresult TYPE REF TO zcl_object_list,
          tmplist TYPE REF TO zcl_object_list,
          executor TYPE REF TO zcl_list_executor,
          o_instructions TYPE REF TO ZCL_STRING,
          instructionresult TYPE REF TO zcl_instruction_result,
          instructionid TYPE string,
          resultstring TYPE string.

    FIELD-SYMBOLS: &lt;obj&gt; TYPE REF TO object.

    CREATE OBJECT o_instructions EXPORTING string = instructions.
    statements = zcl_slim_deserializer=&gt;deserialize( o_instructions ).

    CREATE OBJECT executor.
    results = executor-&gt;execute( statements ).

    CREATE OBJECT formattedresult.
    LOOP AT results-&gt;list ASSIGNING &lt;obj&gt;.
      instructionresult ?= &lt;obj&gt;.
      instructionid = instructionresult-&gt;getid( ).
      resultstring = instructionresult-&gt;getresult( ).

      CREATE OBJECT tmplist.
      DATA: ostring TYPE REF TO ZCL_STRING.
      CREATE OBJECT ostring EXPORTING string = instructionid.
      tmplist-&gt;add( ostring ).
      CREATE OBJECT ostring EXPORTING string = resultstring.
      tmplist-&gt;add( ostring ).
      formattedresult-&gt;add( tmplist ).
    ENDLOOP.

    serialized = zcl_slim_serializer=&gt;serialize( formattedresult ).
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_SLIM_DESERIALIZER" VERSION="1" LANGU="E" DESCRIPT="Slim List Deserializer" UUID="537A3D4E00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140513" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_slim_deserializer DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    CLASS-METHODS: deserialize IMPORTING serialized TYPE REF TO ZCL_STRING
                               RETURNING VALUE(list) TYPE REF TO zcl_object_list
                               RAISING zcx_syntax_error.
    METHODS: constructor IMPORTING serialized TYPE REF TO ZCL_STRING,
             process RETURNING VALUE(list) TYPE REF TO zcl_object_list
                     RAISING zcx_syntax_error.</publicSection>
  <protectedSection></protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: result TYPE REF TO zcl_object_list,
          serialized TYPE REF TO ZCL_STRING,
          index TYPE i VALUE 0.

    METHODS: checkserializedstringisvalid RAISING zcx_syntax_error,
             deserializestring RETURNING VALUE(result) TYPE REF TO zcl_object_list
                               RAISING zcx_syntax_error,
             checkforclosedbracket RAISING zcx_syntax_error,
             charsleft RETURNING VALUE(flag) TYPE flag,
             checkforopenbracket RAISING zcx_syntax_error,
             deserializelist RETURNING VALUE(result) TYPE REF TO zcl_object_list
                             RAISING zcx_syntax_error,
             deserializeitem RAISING zcx_syntax_error,
             maybereadlist IMPORTING string TYPE REF TO ZCL_STRING
                           RETURNING VALUE(list) TYPE REF TO zcl_object_list,
             getstring IMPORTING length TYPE i
                       RETURNING VALUE(result) TYPE REF TO ZCL_STRING
                       RAISING zcx_syntax_error,
             checkforcolon RAISING zcx_syntax_error,
             getchar RETURNING VALUE(c) TYPE REF TO ZCL_STRING,
             getlength RETURNING VALUE(length) TYPE i
                       RAISING zcx_syntax_error,
             trygetlength RETURNING VALUE(length) TYPE i
                          RAISING zcx_syntax_error.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses></localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="INDEX" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" ATTDECLTYP="0" ATTVALUE="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="RESULT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="SERIALIZED" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHARSLEFT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHARSLEFT" SCONAME="FLAG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>method CHARSLEFT.
    DATA: length TYPE i.
    length = strlen( serialized-&gt;string ).
    IF index &lt; length.
      flag = &apos;X&apos;.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHECKFORCLOSEDBRACKET" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHECKFORCLOSEDBRACKET" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method CHECKFORCLOSEDBRACKET.
    CHECK charsleft( ) NE space.

    DATA: char TYPE REF TO ZCL_STRING.
    char = getchar( ).

    IF  char-&gt;string NE &apos;]&apos;.
      RAISE EXCEPTION TYPE zcx_syntax_error
        EXPORTING
          textid = zcx_syntax_error=&gt;no_ending.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHECKFORCOLON" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHECKFORCOLON" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method CHECKFORCOLON.
    DATA: char TYPE REF TO ZCL_STRING.
    char = getchar( ).

    IF char-&gt;string NE &apos;:&apos;.
      RAISE EXCEPTION TYPE zcx_syntax_error
        EXPORTING
          textid = zcx_syntax_error=&gt;not_terminated_by_colon.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHECKFOROPENBRACKET" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHECKFOROPENBRACKET" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method CHECKFOROPENBRACKET.
    DATA: char TYPE REF TO ZCL_STRING.
    char = getchar( ).

    IF char-&gt;string NE &apos;[&apos;.
      RAISE EXCEPTION TYPE zcx_syntax_error
        EXPORTING
          textid = zcx_syntax_error=&gt;no_starting.
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHECKSERIALIZEDSTRINGISVALID" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CHECKSERIALIZEDSTRINGISVALID" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method CHECKSERIALIZEDSTRINGISVALID.
    DATA: length TYPE i.
    length = strlen( serialized-&gt;string ).

    IF length EQ 0.
      RAISE EXCEPTION TYPE zcx_syntax_error
        EXPORTING
          textid = zcx_syntax_error=&gt;empty_string.
    ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="CONSTRUCTOR" SCONAME="SERIALIZED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_STRING"/>
   <source>method CONSTRUCTOR.
    me-&gt;serialized = serialized.
    CREATE OBJECT result.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZE" SCONAME="SERIALIZED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_STRING"/>
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZE" SCONAME="LIST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZE" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method DESERIALIZE.
    DATA: deserializer TYPE REF TO zcl_slim_deserializer.
    CREATE OBJECT deserializer EXPORTING serialized = serialized.
    list = deserializer-&gt;process( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZEITEM" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZEITEM" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method DESERIALIZEITEM.
    DATA: itemlength TYPE i,
          item TYPE REF TO ZCL_STRING,
          sublist TYPE REF TO zcl_object_list.

    itemlength = getlength( ).
    item = getstring( itemlength ).

    sublist = maybereadlist( item ).

    IF sublist IS INITIAL AND item IS NOT INITIAL.
      result-&gt;add( item ).
    ELSE.
      me-&gt;result-&gt;add( sublist ).
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZELIST" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZELIST" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZELIST" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method DESERIALIZELIST.
    DATA: itemcount TYPE i,
          i TYPE i.
    itemcount = getlength( ).

    WHILE i &lt; itemcount.
      deserializeitem( ).
      ADD 1 TO i.
    ENDWHILE.

    result = me-&gt;result.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZESTRING" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZESTRING" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="DESERIALIZESTRING" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method DESERIALIZESTRING.
    checkforopenbracket( ).
    result = deserializelist( ).
    checkforclosedbracket( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETCHAR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETCHAR" SCONAME="C" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_STRING"/>
   <source>method GETCHAR.
    DATA: s TYPE string.
    s = serialized-&gt;string.
    s = s+index(1).

    CREATE OBJECT c EXPORTING string = s.
    ADD 1 TO index.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETLENGTH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETLENGTH" SCONAME="LENGTH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="I"/>
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETLENGTH" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method GETLENGTH.
    length = trygetlength( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETSTRING" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETSTRING" SCONAME="LENGTH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETSTRING" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_STRING"/>
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="GETSTRING" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method GETSTRING.
    DATA: string TYPE string.
    string = serialized-&gt;string.
    string = string+index(length).

    CREATE OBJECT result EXPORTING string = string.

    ADD length TO index.
    checkforcolon( ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="MAYBEREADLIST" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="MAYBEREADLIST" SCONAME="STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_STRING"/>
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="MAYBEREADLIST" SCONAME="LIST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <source>method MAYBEREADLIST.
    DATA: s TYPE string.
    s = string-&gt;string.

    IF s IS INITIAL OR s+0(1) NE &apos;[&apos;.
      RETURN.
    ENDIF.

    TRY.
        list = zcl_slim_deserializer=&gt;deserialize( string ).
      CATCH zcx_syntax_error.
        CLEAR list.
    ENDTRY.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="PROCESS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="PROCESS" SCONAME="LIST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="PROCESS" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method PROCESS.
    checkserializedstringisvalid( ).
    list = deserializestring( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="TRYGETLENGTH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="TRYGETLENGTH" SCONAME="LENGTH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="I"/>
   <exception CLSNAME="ZCL_SLIM_DESERIALIZER" CMPNAME="TRYGETLENGTH" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000"/>
   <source>method TRYGETLENGTH.
    DATA: lengthsize TYPE i VALUE 6,
          lengthstring TYPE string,
          string TYPE string.

    string = serialized-&gt;string.
    lengthstring = string+index(lengthsize).
    MOVE lengthstring TO length.
    ADD lengthsize TO index.
    checkforcolon( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_METHOD_EXECUTOR" VERSION="1" LANGU="E" DESCRIPT="Method Executor" UUID="537A3D4800A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140515" CHANGEDON="00000000" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_METHOD_EXECUTOR definition
  public
  create public .

*&quot;* public components of class ZCL_METHOD_EXECUTOR
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .

  methods EXECUTE
    importing
      !INSTANCENAME type STRING
      !METHODNAME type STRING
      !ARGS type ref to ZCL_DATA_LIST
    returning
      value(RESULT) type ref to ZCL_METHOD_EXECUTION_RESULT .</publicSection>
  <protectedSection>PROTECTED SECTION.
    METHODS: findmatchingmethod IMPORTING methodname TYPE string
                                          class TYPE string
                                RETURNING VALUE(method) TYPE abap_methdescr,
             invokemethod IMPORTING instance TYPE REF TO object
                                    method TYPE abap_methdescr
                                    parmtable TYPE abap_parmbind_tab
                          RETURNING VALUE(result) TYPE REF TO zcl_method_execution_result,
    convertargs IMPORTING classname TYPE string
                          method TYPE abap_methdescr
                          args TYPE REF TO zcl_data_list
                RETURNING VALUE(parmtable) TYPE abap_parmbind_tab,
    callmethod IMPORTING instance TYPE REF TO object
                         method TYPE abap_methdescr
                         parmtable TYPE abap_parmbind_tab
               RETURNING VALUE(result) TYPE abap_parmbind_tab,
    findandinvoke IMPORTING methodname TYPE string
                            args TYPE REF TO zcl_data_list
                            instance TYPE REF TO object
                  RETURNING VALUE(result) TYPE REF TO zcl_method_execution_result.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <typeUsage CLSNAME="ZCL_METHOD_EXECUTOR" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <method CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CALLMETHOD" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CALLMETHOD" SCONAME="INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CALLMETHOD" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_METHDESCR"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CALLMETHOD" SCONAME="PARMTABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_PARMBIND_TAB"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CALLMETHOD" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_PARMBIND_TAB"/>
   <source>method CALLMETHOD.
    result = parmtable.

    CALL METHOD instance-&gt;(method-name)
      PARAMETER-TABLE result.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CONVERTARGS" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CONVERTARGS" SCONAME="CLASSNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CONVERTARGS" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_METHDESCR"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CONVERTARGS" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="CONVERTARGS" SCONAME="PARMTABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_PARMBIND_TAB"/>
   <source>method CONVERTARGS.
    DATA: parmline TYPE abap_parmbind,
          count TYPE i VALUE 1,
          any TYPE REF TO data,
          type TYPE rs38l_typ.
    FIELD-SYMBOLS: &lt;parm&gt; TYPE abap_parmdescr,
                   &lt;data&gt; TYPE data,
                   &lt;any&gt; TYPE data.

    LOOP AT args-&gt;list INTO any.
      READ TABLE method-parameters INDEX count ASSIGNING &lt;parm&gt;.
      parmline-name = &lt;parm&gt;-name.

      SELECT SINGLE type  &quot;#EC CI_SEL_NESTED
        INTO type
        FROM seosubcodf
        WHERE clsname = classname
          AND cmpname = method-name
          AND sconame = &lt;parm&gt;-name
          and version = &apos;1&apos;. &quot;Active!

      CREATE DATA parmline-value TYPE (type).
      ASSIGN parmline-value-&gt;* TO &lt;any&gt;.
      ASSIGN any-&gt;* TO &lt;data&gt;.
      MOVE &lt;data&gt; TO &lt;any&gt;.

      INSERT parmline INTO TABLE parmtable.
      CLEAR parmline.
      ADD 1 TO count.
    ENDLOOP.

    LOOP AT method-parameters ASSIGNING &lt;parm&gt; WHERE parm_kind = cl_abap_objectdescr=&gt;returning.
      parmline-name = &lt;parm&gt;-name.
      parmline-kind = &lt;parm&gt;-parm_kind.

      SELECT SINGLE type &quot;#EC CI_SEL_NESTED
        INTO type
        FROM seosubcodf
        WHERE clsname = classname
          AND cmpname = method-name
          AND sconame = &lt;parm&gt;-name
          and version = &apos;1&apos;. &quot;Active!

      CREATE DATA parmline-value TYPE (type).
      INSERT parmline INTO TABLE parmtable.
      CLEAR parmline.
    ENDLOOP.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="EXECUTE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="EXECUTE" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="EXECUTE" SCONAME="METHODNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="EXECUTE" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="EXECUTE" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_METHOD_EXECUTION_RESULT"/>
   <source>METHOD execute.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDANDINVOKE" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDANDINVOKE" SCONAME="METHODNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDANDINVOKE" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDANDINVOKE" SCONAME="INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDANDINVOKE" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_METHOD_EXECUTION_RESULT"/>
   <source>method FINDANDINVOKE.
    DATA: method TYPE abap_methdescr,
          typedesc TYPE REF TO cl_abap_typedescr,
          s TYPE string,
          lt_parmtable TYPE abap_parmbind_tab,
          classname TYPE string.

    typedesc = cl_abap_typedescr=&gt;describe_by_object_ref( instance ).
    MOVE typedesc-&gt;absolute_name TO s.

    MOVE s TO classname.
    classname = classname+7. &quot;Cut \CLASS= from the absolutename

    method = findmatchingmethod( methodname = methodname class = s ).
    IF method IS NOT INITIAL.
      lt_parmtable = convertargs( classname = classname method = method args = args ).
      result = invokemethod( instance = instance method = method parmtable = lt_parmtable ).
    ENDIF.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDMATCHINGMETHOD" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDMATCHINGMETHOD" SCONAME="METHODNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDMATCHINGMETHOD" SCONAME="CLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="FINDMATCHINGMETHOD" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_METHDESCR"/>
   <source>METHOD findmatchingmethod.
  DATA: objectdesc TYPE REF TO cl_abap_objectdescr,
        typedesc TYPE REF TO cl_abap_typedescr,
        upper TYPE string.

  typedesc = cl_abap_typedescr=&gt;describe_by_name( class ).
  objectdesc ?= typedesc.

  MOVE methodname TO upper.
  TRANSLATE upper TO UPPER CASE.
  READ TABLE objectdesc-&gt;methods WITH KEY name = upper INTO method. &quot;#EC *
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="INVOKEMETHOD" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="INVOKEMETHOD" SCONAME="INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="INVOKEMETHOD" SCONAME="METHOD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_METHDESCR"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="INVOKEMETHOD" SCONAME="PARMTABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_PARMBIND_TAB"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="INVOKEMETHOD" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_METHOD_EXECUTION_RESULT"/>
   <source>METHOD invokemethod.
  DATA: lt_parmtable TYPE STANDARD TABLE OF abap_parmbind,
        typedesc TYPE REF TO cl_abap_typedescr,
        s TYPE string.

  FIELD-SYMBOLS: &lt;parm&gt; TYPE abap_parmbind.

  lt_parmtable = callmethod( instance = instance method = method parmtable = parmtable ).

  LOOP AT lt_parmtable ASSIGNING &lt;parm&gt; WHERE kind = cl_abap_objectdescr=&gt;returning.
    typedesc = cl_abap_typedescr=&gt;describe_by_data_ref( &lt;parm&gt;-value ).
    MOVE typedesc-&gt;absolute_name TO s.
    CREATE OBJECT result
      EXPORTING
        value = &lt;parm&gt;-value
        TYPE  = s.
    EXIT.
  ENDLOOP.
  IF sy-subrc NE 0.
    CREATE OBJECT result.
  ENDIF.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_OBJECT_LIST" VERSION="1" LANGU="E" DESCRIPT="List" UUID="537A3D4200A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140515" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_object_list DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS: add IMPORTING e TYPE REF TO object,
             clear,
             get IMPORTING index TYPE i
                 RETURNING VALUE(o) TYPE REF TO object,
             toarray RETURNING VALUE(datalist) TYPE REF TO zcl_data_list,
             size RETURNING VALUE(size) TYPE i,
             sublist IMPORTING fromindex TYPE i
                               toindex TYPE i
                     RETURNING VALUE(sublist) TYPE REF TO zcl_object_list.

    DATA: list TYPE osreftab.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_OBJECT_LIST" CMPNAME="LIST" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="OSREFTAB" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_OBJECT_LIST" CMPNAME="ADD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_OBJECT_LIST" CMPNAME="ADD" SCONAME="E" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <source>method ADD.
    APPEND e TO list.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_OBJECT_LIST" CMPNAME="CLEAR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CLEAR.
    CLEAR list.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_OBJECT_LIST" CMPNAME="GET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_OBJECT_LIST" CMPNAME="GET" SCONAME="INDEX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_OBJECT_LIST" CMPNAME="GET" SCONAME="O" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="OBJECT"/>
   <source>method GET.
    READ TABLE list INDEX index INTO o.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_OBJECT_LIST" CMPNAME="SIZE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_OBJECT_LIST" CMPNAME="SIZE" SCONAME="SIZE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="I"/>
   <source>method SIZE.
    DESCRIBE TABLE list LINES size.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_OBJECT_LIST" CMPNAME="SUBLIST" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_OBJECT_LIST" CMPNAME="SUBLIST" SCONAME="FROMINDEX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_OBJECT_LIST" CMPNAME="SUBLIST" SCONAME="TOINDEX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_OBJECT_LIST" CMPNAME="SUBLIST" SCONAME="SUBLIST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <source>method SUBLIST.
    DATA: index TYPE i,
          obj TYPE REF TO object.
    CREATE OBJECT sublist.

    index = fromindex.
    WHILE index &lt;= toindex.
      obj = get( index ).
      sublist-&gt;add( obj ).
      ADD 1 TO index.
    ENDWHILE.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_OBJECT_LIST" CMPNAME="TOARRAY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_OBJECT_LIST" CMPNAME="TOARRAY" SCONAME="DATALIST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <source>method TOARRAY.
    DATA: typedesc TYPE REF TO cl_abap_typedescr,
          sublist TYPE REF TO zcl_data_list,
          tmplist TYPE REF TO zcl_object_list,
          strobj TYPE REF TO ZCL_STRING,
          str TYPE REF TO data.

    FIELD-SYMBOLS: &lt;obj&gt; TYPE REF TO object,
                   &lt;string&gt; TYPE string.

    CREATE OBJECT datalist.
    ASSIGN str-&gt;* TO &lt;string&gt;.

    LOOP AT list ASSIGNING &lt;obj&gt;.
      typedesc = cl_abap_typedescr=&gt;describe_by_object_ref( &lt;obj&gt; ).
      IF typedesc-&gt;absolute_name EQ &apos;\CLASS=ZCL_OBJECT_LIST&apos;.
        tmplist ?= &lt;obj&gt;.
        sublist = tmplist-&gt;toarray( ).
        datalist-&gt;addall( sublist ).
      ELSE.
        strobj ?= &lt;obj&gt;.
        GET REFERENCE OF strobj-&gt;string INTO str.
        datalist-&gt;add( str ).
      ENDIF.

    ENDLOOP.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_METHOD_EXECUTION_RESULT" VERSION="1" LANGU="E" DESCRIPT="Method Execution Result" UUID="537A3D3C00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140515" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_METHOD_EXECUTION_RESULT definition
  public
  final
  create public .

*&quot;* public components of class ZCL_METHOD_EXECUTION_RESULT
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .

  methods CONSTRUCTOR
    importing
      !VALUE type ref to DATA optional
      !TYPE type STRING optional .
  methods HASRESULT
    returning
      value(FLAG) type FLAG .
  methods RETURNVALUE
    returning
      value(VALUE) type STRING .
  methods TOSTRING
    returning
      value(STRING) type STRING .
  methods HASMETHOD
    returning
      value(FLAG) type FLAG .
  methods GETOBJECT
    returning
      value(VALUE) type ref to DATA .</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>*&quot;* private components of class ZCL_METHOD_EXECUTION_RESULT
*&quot;* do not include other source files here!!!
private section.

  data VALUE type ref to DATA .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <typeUsage CLSNAME="ZCL_METHOD_EXECUTION_RESULT" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="VALUE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="CONSTRUCTOR" SCONAME="VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="DATA" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="CONSTRUCTOR" SCONAME="TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
    me-&gt;value = value.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="GETOBJECT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="GETOBJECT" SCONAME="VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="DATA"/>
   <source>METHOD getobject.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="HASMETHOD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="HASMETHOD" SCONAME="FLAG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>METHOD hasmethod.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="HASRESULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="HASRESULT" SCONAME="FLAG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>method HASRESULT.
    flag = abap_true.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="RETURNVALUE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="RETURNVALUE" SCONAME="VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD returnvalue.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="TOSTRING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULT" CMPNAME="TOSTRING" SCONAME="STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method TOSTRING.
    FIELD-SYMBOLS: &lt;data&gt; TYPE data.

    ASSIGN value-&gt;* TO &lt;data&gt;.
    CHECK &lt;data&gt; IS ASSIGNED.
    MOVE &lt;data&gt; TO string.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_SLIM_SERIALIZER" VERSION="1" LANGU="E" DESCRIPT="Slim Serializer" UUID="537A3D3600A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140513" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_slim_serializer DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS: constructor IMPORTING list TYPE REF TO zcl_object_list,
             process RETURNING VALUE(rv_result) TYPE string.

    CLASS-METHODS: serialize IMPORTING list TYPE REF TO zcl_object_list
                             RETURNING VALUE(rv_result) TYPE string.</publicSection>
  <protectedSection></protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: result TYPE string,
          list TYPE REF TO zcl_object_list.

    METHODS: appendlength IMPORTING size TYPE i,
             append IMPORTING str TYPE string,
             marshalobjecttostring IMPORTING obj TYPE REF TO object
                                   RETURNING VALUE(str) TYPE string,
             appendstring IMPORTING str TYPE string.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>* ----------------------------------------------------------------------
CLASS abap_unit_testclass DEFINITION FOR TESTING  &quot;#AU Duration Medium
  &quot;#AU Risk_Level Harmless
  INHERITING FROM cl_aunit_assert.
* ----------------------------------------------------------------------
* ===============
  PUBLIC SECTION.
* ===============

* ==================
  PROTECTED SECTION.
* ==================

* ================
  PRIVATE SECTION.
* ================
    DATA:
      m_ref TYPE REF TO zcl_slim_serializer,
      list TYPE REF TO zcl_object_list,
      result TYPE string,
      str TYPE REF TO zcl_string.

    METHODS: setup.
    METHODS: teardown.
    METHODS: nulllistserialize FOR TESTING,
             oneitemlistserialize FOR TESTING,
             twoitemlistserialize FOR TESTING,
             serializenestedlist FOR TESTING,
             serializenullelement FOR TESTING.
ENDCLASS.       &quot;Abap_Unit_Testclass
* ----------------------------------------------------------------------
CLASS abap_unit_testclass IMPLEMENTATION.
* ----------------------------------------------------------------------

* ----------------------------------------------------------------------
  METHOD setup.
* ----------------------------------------------------------------------
    CREATE OBJECT list.
  ENDMETHOD.       &quot;Setup

* ----------------------------------------------------------------------
  METHOD teardown.
* ----------------------------------------------------------------------


  ENDMETHOD.       &quot;Teardown

  METHOD nulllistserialize.
    result = zcl_slim_serializer=&gt;serialize( list ).
    assert_equals( exp = &apos;[000000:]&apos; act = result ).
  ENDMETHOD.                    &quot;nulllistserialize

  METHOD oneitemlistserialize.

    CREATE OBJECT str
      EXPORTING
        string = &apos;hello&apos;.

    list-&gt;add( str ).
    result = zcl_slim_serializer=&gt;serialize( list ).
    assert_equals( exp = &apos;[000001:000005:hello:]&apos; act = result ).
  ENDMETHOD.                    &quot;oneItemListSerialize

  METHOD twoitemlistserialize.
    CREATE OBJECT str
      EXPORTING
        string = &apos;hello&apos;.
    list-&gt;add( str ).

    CREATE OBJECT str
      EXPORTING
        string = &apos;world&apos;.
    list-&gt;add( str ).
    result = zcl_slim_serializer=&gt;serialize( list ).
    assert_equals( exp = &apos;[000002:000005:hello:000005:world:]&apos; act = result ).
  ENDMETHOD.                    &quot;twoItemListSerialize

  METHOD serializenestedlist.
    DATA: sublist TYPE REF TO zcl_object_list.
    CREATE OBJECT sublist.

    CREATE OBJECT str
      EXPORTING
        string = &apos;element&apos;.
    sublist-&gt;add( str ).

    list-&gt;add( sublist ).

    result = zcl_slim_serializer=&gt;serialize( list ).
    assert_equals( exp = &apos;[000001:000024:[000001:000007:element:]:]&apos; act = result ).

  ENDMETHOD.                    &quot;serializeNestedList

  METHOD serializenullelement.

    list-&gt;add( str ).
    result = zcl_slim_serializer=&gt;serialize( list ).
    assert_equals( exp = &apos;[000001:000004:null:]&apos; act = result ).

  ENDMETHOD.                    &quot;serializeNullElement

ENDCLASS.       &quot;Abap_Unit_Testclass

*  @Test
*  public void serializeListWithNonString() throws Exception {
*    String s = SlimSerializer.serialize(ListUtility.&lt;Object&gt;list(1));
*    list = SlimDeserializer.deserialize(s);
*    assertEquals(&quot;1&quot;, list.get(0));
*  }
*
*  @Test
*  public void serializeNullElement() throws Exception {
*    List&lt;Object&gt; list = list();
*    list.add(null);
*    String s = SlimSerializer.serialize(list);
*    assertEquals(&quot;[000001:000004:null:]&quot;, s);
*  }
*
*
*}</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="LIST" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="RESULT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="APPEND" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="APPEND" SCONAME="STR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method APPEND.
    CONCATENATE result str INTO result.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="APPENDLENGTH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="APPENDLENGTH" SCONAME="SIZE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <source>method APPENDLENGTH.
    DATA: length TYPE c LENGTH 6,
          lengthstring TYPE string.

    MOVE size TO length.

    CALL FUNCTION &apos;CONVERSION_EXIT_ALPHA_INPUT&apos;
      EXPORTING
        input  = length
      IMPORTING
        output = length.

    MOVE length TO lengthstring.
    appendstring( lengthstring ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="APPENDSTRING" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="APPENDSTRING" SCONAME="STR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>method APPENDSTRING.
    append( str ).
    append( &apos;:&apos; ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="CONSTRUCTOR" SCONAME="LIST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <source>method CONSTRUCTOR.
    me-&gt;list = list.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="MARSHALOBJECTTOSTRING" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="MARSHALOBJECTTOSTRING" SCONAME="OBJ" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="MARSHALOBJECTTOSTRING" SCONAME="STR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD marshalobjecttostring.
  DATA: ostring TYPE REF TO zcl_string,
        olist TYPE REF TO zcl_object_list,
        typedesc TYPE REF TO cl_abap_typedescr.

  IF obj IS NOT BOUND.
    str = &apos;null&apos;.
    RETURN.
  ENDIF.

  typedesc = cl_abap_typedescr=&gt;describe_by_object_ref( obj ).

  IF typedesc-&gt;absolute_name EQ &apos;\CLASS=ZCL_STRING&apos;.
    ostring ?= obj.

    IF ostring-&gt;string IS INITIAL.
      str = &apos;null&apos;.
      RETURN.
    ENDIF.

    str = ostring-&gt;string.
  ELSE.
    olist ?= obj.
    str = serialize( olist ).
  ENDIF.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="PROCESS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="PROCESS" SCONAME="RV_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method PROCESS.
    DATA: listsize TYPE i,
          s TYPE string,
          length TYPE i.
    FIELD-SYMBOLS: &lt;obj&gt; TYPE REF TO object.

    append( &apos;[&apos; ).

    listsize = list-&gt;size( ).
    appendlength( listsize ).

    LOOP AT list-&gt;list ASSIGNING &lt;obj&gt;.
      s = marshalobjecttostring( &lt;obj&gt; ).
      length = strlen( s ).
      appendlength( length ).
      appendstring( s ).
    ENDLOOP.

    append(&apos;]&apos;).

    rv_result = result.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="SERIALIZE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="SERIALIZE" SCONAME="LIST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_SLIM_SERIALIZER" CMPNAME="SERIALIZE" SCONAME="RV_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method SERIALIZE.
    DATA: serializer TYPE REF TO zcl_slim_serializer.

    CREATE OBJECT serializer EXPORTING list = list.
    rv_result = serializer-&gt;process( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_METHOD_EXECUTION_RESULTS" VERSION="1" LANGU="E" DESCRIPT="Execution results" UUID="537A3D3000A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140516" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_method_execution_results DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS: constructor,
             add IMPORTING result TYPE REF TO zcl_method_execution_result
                 RETURNING VALUE(results) TYPE REF TO zcl_method_execution_results,
             getfirstresults RETURNING VALUE(result) TYPE REF TO zcl_method_execution_result.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: list TYPE REF TO zcl_object_list.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_METHOD_EXECUTION_RESULTS" CMPNAME="LIST" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULTS" CMPNAME="ADD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULTS" CMPNAME="ADD" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_METHOD_EXECUTION_RESULT"/>
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULTS" CMPNAME="ADD" SCONAME="RESULTS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_METHOD_EXECUTION_RESULTS"/>
   <source>method ADD.
    list-&gt;add( result ).
    results = me.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULTS" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.
    CREATE OBJECT list.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTION_RESULTS" CMPNAME="GETFIRSTRESULTS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_METHOD_EXECUTION_RESULTS" CMPNAME="GETFIRSTRESULTS" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_METHOD_EXECUTION_RESULT"/>
   <source>method GETFIRSTRESULTS.
    result ?= list-&gt;get( 1 ).
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" VERSION="1" LANGU="E" DESCRIPT="Slim Statement Executor" UUID="537A3D2A00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140514" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_slim_statement_executor DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS: constructor,
             stophasbeenrequested RETURNING VALUE(flag) TYPE flag,
             reset,
             create IMPORTING instancename TYPE string
                              classname TYPE string
                              args TYPE REF TO zcl_data_list,
             call IMPORTING instancename TYPE string
                            methodname TYPE string
                            args TYPE REF TO zcl_data_list
                  RETURNING VALUE(result) TYPE string,
             callandassign IMPORTING symbolname TYPE string
                                      instancename TYPE string
                                      methodname TYPE string
                                      args TYPE REF TO zcl_data_list
                           RETURNING VALUE(result) TYPE string,
             getinstance IMPORTING instancename TYPE string
                         RETURNING VALUE(instance) TYPE REF TO object,
             setinstance IMPORTING actorinstancename TYPE string
                                   actor TYPE REF TO object,
             setvariable IMPORTING name TYPE string
                                   value TYPE data.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: stoprequested TYPE flag,
          executorchain TYPE REF TO zcl_object_list,
          context TYPE REF TO zcl_slim_execution_context.

    METHODS: getmethodexecutionresult IMPORTING instancename TYPE string
                                                methodname TYPE string
                                                args TYPE REF TO zcl_data_list
                                      RETURNING VALUE(result) TYPE REF TO zcl_method_execution_result.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CONTEXT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_SLIM_EXECUTION_CONTEXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="EXECUTORCHAIN" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="STOPREQUESTED" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FLAG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALL" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALL" SCONAME="METHODNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALL" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALL" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method CALL.
    DATA: r TYPE REF TO zcl_method_execution_result.
    r = getmethodexecutionresult( instancename = instancename methodname = methodname args = args ).
    result = r-&gt;tostring( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALLANDASSIGN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALLANDASSIGN" SCONAME="SYMBOLNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALLANDASSIGN" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALLANDASSIGN" SCONAME="METHODNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALLANDASSIGN" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CALLANDASSIGN" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD callandassign.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.
    DATA: fixture_executor TYPE REF TO zcl_fixture_method_executor.
    context = zcl_slim_execution_context=&gt;get_context( ).
    CREATE OBJECT executorchain.

    CREATE OBJECT fixture_executor EXPORTING context = context.
    executorchain-&gt;add( fixture_executor ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CREATE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CREATE" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CREATE" SCONAME="CLASSNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="CREATE" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <source>method CREATE.
    &quot;TODO: Exception handling
    context-&gt;create( instancename = instancename classname = classname args = args ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="GETINSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="GETINSTANCE" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="GETINSTANCE" SCONAME="INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="OBJECT"/>
   <source>method GETINSTANCE.
    instance = context-&gt;getinstance( instancename ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="GETMETHODEXECUTIONRESULT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="GETMETHODEXECUTIONRESULT" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="GETMETHODEXECUTIONRESULT" SCONAME="METHODNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="GETMETHODEXECUTIONRESULT" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="GETMETHODEXECUTIONRESULT" SCONAME="RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_METHOD_EXECUTION_RESULT"/>
   <source>method GETMETHODEXECUTIONRESULT.
    FIELD-SYMBOLS: &lt;obj&gt; TYPE REF TO object.
    DATA: executor TYPE REF TO zcl_method_executor,
          results TYPE REF TO zcl_method_execution_results.

    CREATE OBJECT results.

    LOOP AT executorchain-&gt;list ASSIGNING &lt;obj&gt;.
      executor ?= &lt;obj&gt;.

      result = executor-&gt;execute( instancename = instancename methodname = methodname args = args ).
      IF ( result-&gt;hasresult( ) EQ abap_true ).
        RETURN.
      ENDIF.
      results-&gt;add( result ).
    ENDLOOP.

    result = results-&gt;getfirstresults( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="RESET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method RESET.
    CLEAR stoprequested.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="SETINSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="SETINSTANCE" SCONAME="ACTORINSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="SETINSTANCE" SCONAME="ACTOR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <source>method SETINSTANCE.
    context-&gt;setinstance( actorinstancename = actorinstancename actor = actor ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="SETVARIABLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="SETVARIABLE" SCONAME="NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="SETVARIABLE" SCONAME="VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DATA"/>
   <source>method SETVARIABLE.
    context-&gt;setvariable( name = name value = value ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="STOPHASBEENREQUESTED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_STATEMENT_EXECUTOR" CMPNAME="STOPHASBEENREQUESTED" SCONAME="FLAG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>method STOPHASBEENREQUESTED.
    flag = stoprequested.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_LIST_EXECUTOR" VERSION="1" LANGU="E" DESCRIPT="List Executor" UUID="537A3D2400A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140514" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_LIST_EXECUTOR definition
  public
  final
  create public .

*&quot;* public components of class ZCL_LIST_EXECUTOR
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .

  methods CONSTRUCTOR .
  methods EXECUTE
    importing
      !STATEMENTS type ref to ZCL_OBJECT_LIST
    returning
      value(RESULTS) type ref to ZCL_OBJECT_LIST
    raising
      ZCX_SYNTAX_ERROR .</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: executor TYPE REF TO zcl_slim_statement_executor.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations

CLASS lcl_executive DEFINITION.
  PUBLIC SECTION.
    METHODS: constructor IMPORTING executor TYPE REF TO zcl_slim_statement_executor,
             executestatements IMPORTING statements TYPE REF TO zcl_object_list
                               RETURNING value(results) TYPE REF TO zcl_object_list
                               RAISING zcx_syntax_error,
             executestatement IMPORTING statement TYPE REF TO zcl_object_list
                              RETURNING value(result) TYPE REF TO object
                              RAISING zcx_syntax_error,
             finalizeexecution.

  PRIVATE SECTION.
    DATA: executor TYPE REF TO zcl_slim_statement_executor.
ENDCLASS.                    &quot;lcl_executive DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_executive IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_executive IMPLEMENTATION.

  METHOD constructor.
    me-&gt;executor = executor.
  ENDMETHOD.                    &quot;constructor

  METHOD executestatements.
    DATA: result TYPE REF TO object,
          statement TYPE REF TO zcl_object_list.
    FIELD-SYMBOLS: &lt;statement&gt; TYPE REF TO object.

    CREATE OBJECT results.

    LOOP AT statements-&gt;list ASSIGNING &lt;statement&gt;.
      IF executor-&gt;stophasbeenrequested( ) NE abap_true.
        statement ?= &lt;statement&gt;.
        result = executestatement( statement ).
        results-&gt;add( result ).
      ENDIF.
    ENDLOOP.
  ENDMETHOD.                    &quot;executestatements


  METHOD executestatement.
    DATA: instruction TYPE REF TO zcl_instruction.
    instruction = zcl_instruction_factory=&gt;createinstruction( statement ).
    result = instruction-&gt;execute( executor ).
  ENDMETHOD.                    &quot;executestatement


  METHOD finalizeexecution.
    IF executor-&gt;stophasbeenrequested( ) EQ abap_true.
      executor-&gt;reset( ).
    ENDIF.
  ENDMETHOD.                    &quot;finalizeexecution

ENDCLASS.                    &quot;lcl_executive IMPLEMENTATION</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <typeUsage CLSNAME="ZCL_LIST_EXECUTOR" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_LIST_EXECUTOR" CMPNAME="EXECUTOR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_SLIM_STATEMENT_EXECUTOR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_LIST_EXECUTOR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.
    CREATE OBJECT executor.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_LIST_EXECUTOR" CMPNAME="EXECUTE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140630" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_LIST_EXECUTOR" CMPNAME="EXECUTE" SCONAME="STATEMENTS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_LIST_EXECUTOR" CMPNAME="EXECUTE" SCONAME="RESULTS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <exception CLSNAME="ZCL_LIST_EXECUTOR" CMPNAME="EXECUTE" SCONAME="ZCX_SYNTAX_ERROR" VERSION="1" LANGU="E" DESCRIPT="ZCX_SYNTAX_ERROR" MTDTYPE="0" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140630" CHANGEDON="00000000"/>
   <source>method EXECUTE.
    DATA: e TYPE REF TO lcl_executive.
    CREATE OBJECT e EXPORTING executor = executor.

    results = e-&gt;executestatements( statements ).
    e-&gt;finalizeexecution( ).
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" VERSION="1" LANGU="E" DESCRIPT="Execution Context" UUID="537A3D1E00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140515" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" CLSSHAREDMEMORY="X" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_SLIM_EXECUTION_CONTEXT definition
  public
  final
  create private
  shared memory enabled .

*&quot;* public components of class ZCL_SLIM_EXECUTION_CONTEXT
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .

  class-methods GET_CONTEXT
    returning
      value(CONTEXT) type ref to ZCL_SLIM_EXECUTION_CONTEXT .
  methods GETINSTANCE
    importing
      !INSTANCENAME type STRING
    returning
      value(INSTANCE) type ref to OBJECT .
  methods SETINSTANCE
    importing
      !ACTORINSTANCENAME type STRING
      !ACTOR type ref to OBJECT .
  methods SETVARIABLE
    importing
      !NAME type STRING
      !VALUE type DATA .
  methods CREATE
    importing
      !INSTANCENAME type STRING
      !CLASSNAME type STRING
      !ARGS type ref to ZCL_DATA_LIST .</publicSection>
  <protectedSection></protectedSection>
  <privateSection>*&quot;* private components of class ZCL_SLIM_EXECUTION_CONTEXT
*&quot;* do not include other source files here!!!
private section.

  class-data _CONTEXT type ref to ZCL_SLIM_EXECUTION_CONTEXT .
  data INSTANCES type ref to CL_OBJECT_MAP .

  methods CONSTRUCTOR .
  methods BUILD_CONSTRUCTOR_PARMS
    importing
      !CLASSNAME type STRING
      !ARGS type ref to ZCL_DATA_LIST
    returning
      value(PARMTABLE) type ABAP_PARMBIND_TAB .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes
CLASS abap_unit_testclass DEFINITION DEFERRED.
CLASS zcl_slim_execution_context DEFINITION LOCAL FRIENDS abap_unit_testclass.
* ----------------------------------------------------------------------
CLASS abap_unit_testclass DEFINITION FOR TESTING  &quot;#AU Duration Medium
  &quot;#AU Risk_Level Harmless
.
* ----------------------------------------------------------------------
* ===============
  PUBLIC SECTION.
* ===============

* ==================
  PROTECTED SECTION.
* ==================

* ================
  PRIVATE SECTION.
* ================
    DATA:
      m_ref TYPE REF TO zcl_slim_execution_context.         &quot;#EC NOTEXT

    METHODS: setup.
    METHODS: teardown.
    METHODS: shouldreplacesymbols FOR TESTING.
ENDCLASS.       &quot;Abap_Unit_Testclass
* ----------------------------------------------------------------------
CLASS abap_unit_testclass IMPLEMENTATION.
* ----------------------------------------------------------------------

* ----------------------------------------------------------------------
  METHOD setup.
* ----------------------------------------------------------------------

    CREATE OBJECT m_ref.
  ENDMETHOD.       &quot;Setup

* ----------------------------------------------------------------------
  METHOD teardown.
* ----------------------------------------------------------------------


  ENDMETHOD.       &quot;Teardown


  METHOD shouldreplacesymbols.


    m_ref-&gt;setvariable( name = &apos;first&apos; value = &apos;var1&apos; ).
    m_ref-&gt;setvariable( name = &apos;second&apos; value = &apos;var2&apos; ).
  ENDMETHOD.                    &quot;shouldreplacesymbols

ENDCLASS.       &quot;Abap_Unit_Testclass</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <typeUsage CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="INSTANCES" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_OBJECT_MAP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_SLIM_EXECUTION_CONTEXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="BUILD_CONSTRUCTOR_PARMS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="BUILD_CONSTRUCTOR_PARMS" SCONAME="CLASSNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="BUILD_CONSTRUCTOR_PARMS" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="BUILD_CONSTRUCTOR_PARMS" SCONAME="PARMTABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_PARMBIND_TAB"/>
   <source>METHOD build_constructor_parms.
  DATA: objectdesc TYPE REF TO cl_abap_objectdescr,
        method TYPE abap_methdescr,
        any TYPE REF TO data,
        count TYPE i VALUE 1,
        parmline TYPE abap_parmbind,
        type TYPE rs38l_typ.

  FIELD-SYMBOLS: &lt;parm&gt; TYPE abap_parmdescr,
                 &lt;data&gt; TYPE data,
                 &lt;any&gt; TYPE data.
  CHECK classname CP &apos;Z*&apos;.

  TRY.
      objectdesc ?= cl_abap_typedescr=&gt;describe_by_name( classname ).
    CATCH cx_root.                                       &quot;#EC CATCH_ALL
      RETURN.
  ENDTRY.

  READ TABLE objectdesc-&gt;methods WITH KEY name = &apos;CONSTRUCTOR&apos; INTO method.

  LOOP AT args-&gt;list INTO any.
    READ TABLE method-parameters INDEX count ASSIGNING &lt;parm&gt;.
    CHECK &lt;parm&gt; IS ASSIGNED.
    parmline-name = &lt;parm&gt;-name.

    SELECT SINGLE type                               &quot;#EC CI_SEL_NESTED
      INTO type
      FROM seosubcodf
      WHERE clsname = classname
        AND cmpname = &apos;CONSTRUCTOR&apos;
        AND sconame = &lt;parm&gt;-name
        AND version = &apos;1&apos;. &quot;Active!

    CREATE DATA parmline-value TYPE (type).
    ASSIGN parmline-value-&gt;* TO &lt;any&gt;.
    ASSIGN any-&gt;* TO &lt;data&gt;.
    MOVE &lt;data&gt; TO &lt;any&gt;.

    INSERT parmline INTO TABLE parmtable.
    CLEAR parmline.
    ADD 1 TO count.
  ENDLOOP.

ENDMETHOD.                    &quot;BUILD_CONSTRUCTOR_PARMS</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CONSTRUCTOR.
    CREATE OBJECT instances.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="CREATE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="CREATE" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="CREATE" SCONAME="CLASSNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="CREATE" SCONAME="ARGS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <source>method CREATE.
    DATA: obj TYPE REF TO object,
          name TYPE string,
          ptab TYPE abap_parmbind_tab.

    MOVE classname TO name.
    TRANSLATE name TO UPPER CASE.

    ptab = build_constructor_parms( classname = name args = args ).
    IF ptab IS NOT INITIAL.
      CREATE OBJECT obj TYPE (name) PARAMETER-TABLE ptab.
    ELSE.
      CREATE OBJECT obj TYPE (name).
    ENDIF.

    setinstance( actorinstancename = instancename actor = obj ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="GETINSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="GETINSTANCE" SCONAME="INSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="GETINSTANCE" SCONAME="INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="OBJECT"/>
   <source>method GETINSTANCE.
    DATA: element TYPE cl_object_map=&gt;ty_map_element,
          upper TYPE string.
    MOVE instancename TO upper.
    TRANSLATE upper TO UPPER CASE.
    READ TABLE instances-&gt;map WITH TABLE KEY key = upper INTO element.
    instance = element-value.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="GET_CONTEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="GET_CONTEXT" SCONAME="CONTEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_SLIM_EXECUTION_CONTEXT"/>
   <source>method GET_CONTEXT.
    IF _context IS INITIAL.
      CREATE OBJECT _context.
    ENDIF.

    context = _context.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="SETINSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="SETINSTANCE" SCONAME="ACTORINSTANCENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="SETINSTANCE" SCONAME="ACTOR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <source>method SETINSTANCE.
    instances-&gt;remove( key = actorinstancename ).
    instances-&gt;put( key = actorinstancename value = actor ).
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="SETVARIABLE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="SETVARIABLE" SCONAME="NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_SLIM_EXECUTION_CONTEXT" CMPNAME="SETVARIABLE" SCONAME="VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DATA"/>
   <source>METHOD setvariable.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_FIXTURE_METHOD_EXECUTOR" VERSION="1" LANGU="E" DESCRIPT="Fixture Method Executor" UUID="537A3D1800A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_METHOD_EXECUTOR">
  <publicSection>CLASS zcl_fixture_method_executor DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC
  INHERITING FROM zcl_method_executor.

  PUBLIC SECTION.
    METHODS: constructor IMPORTING context TYPE REF TO zcl_slim_execution_context,
             execute REDEFINITION.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.
    DATA: context TYPE REF TO zcl_slim_execution_context.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_FIXTURE_METHOD_EXECUTOR" CMPNAME="CONTEXT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_SLIM_EXECUTION_CONTEXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_FIXTURE_METHOD_EXECUTOR" REFCLSNAME="ZCL_METHOD_EXECUTOR" VERSION="1" STATE="1" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000">
   <redefinition CLSNAME="ZCL_FIXTURE_METHOD_EXECUTOR" REFCLSNAME="ZCL_METHOD_EXECUTOR" VERSION="1" MTDNAME="EXECUTE"/>
  </inheritance>
  <method CLSNAME="ZCL_FIXTURE_METHOD_EXECUTOR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_FIXTURE_METHOD_EXECUTOR" CMPNAME="CONSTRUCTOR" SCONAME="CONTEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_SLIM_EXECUTION_CONTEXT"/>
   <source>method CONSTRUCTOR.
    super-&gt;constructor( ).
    me-&gt;context = context.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_METHOD_EXECUTOR" CMPNAME="EXECUTE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method EXECUTE.
    DATA: instance TYPE REF TO object.
    instance = context-&gt;getinstance( instancename ).
    CHECK instance IS NOT INITIAL.
    result = findandinvoke( methodname = methodname args = args instance = instance ).
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_DATA_LIST" VERSION="1" LANGU="E" DESCRIPT="Data list" UUID="537A3D1200A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140515" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>CLASS zcl_data_list DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS: add IMPORTING e TYPE REF TO data,
             addall IMPORTING datalist TYPE REF TO zcl_data_list,
             clear,
             get IMPORTING index TYPE i
                 RETURNING VALUE(o) TYPE REF TO data,
             toarray EXPORTING array TYPE ANY TABLE,
             size RETURNING VALUE(size) TYPE i.

    DATA: list TYPE STANDARD TABLE OF REF TO data.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_DATA_LIST" CMPNAME="LIST" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140519" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="11 " SRCCOLUMN2="42 " R3RELEASE="700" TYPESRC_LENG="41 " TYPESRC="list TYPE STANDARD TABLE OF REF TO data
"/>
  <method CLSNAME="ZCL_DATA_LIST" CMPNAME="ADD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_DATA_LIST" CMPNAME="ADD" SCONAME="E" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="DATA"/>
   <source>method ADD.
    APPEND e TO list.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_DATA_LIST" CMPNAME="ADDALL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_DATA_LIST" CMPNAME="ADDALL" SCONAME="DATALIST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_DATA_LIST"/>
   <source>method ADDALL.
    FIELD-SYMBOLS: &lt;data&gt; TYPE REF TO data.

    LOOP AT datalist-&gt;list ASSIGNING &lt;data&gt;.
      add( &lt;data&gt; ).
    ENDLOOP.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_DATA_LIST" CMPNAME="CLEAR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CLEAR.
    CLEAR list.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_DATA_LIST" CMPNAME="GET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_DATA_LIST" CMPNAME="GET" SCONAME="INDEX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_DATA_LIST" CMPNAME="GET" SCONAME="O" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="DATA"/>
   <source>method GET.
    READ TABLE list INDEX index INTO o.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_DATA_LIST" CMPNAME="SIZE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_DATA_LIST" CMPNAME="SIZE" SCONAME="SIZE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="I"/>
   <source>method SIZE.
    DESCRIBE TABLE list LINES size.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_DATA_LIST" CMPNAME="TOARRAY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_DATA_LIST" CMPNAME="TOARRAY" SCONAME="ARRAY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY TABLE"/>
   <source>METHOD toarray.
  RETURN.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_VARIABLE_STORE" VERSION="1" LANGU="E" DESCRIPT="Variable Store" UUID="537A3D0C00A91200E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140516" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_VARIABLE_STORE definition
  public
  final
  create public .

*&quot;* public components of class ZCL_VARIABLE_STORE
*&quot;* do not include other source files here!!!
public section.

  methods SETSYMBOL
    importing
      !NAME type STRING
      !VALUE type ref to ZCL_METHOD_EXECUTION_RESULT .
  methods GETSTORED
    importing
      !NAMEWITHDOLLAR type STRING
    returning
      value(RO_OBJ) type ref to OBJECT .
  methods CONTAINSVALUEFOR
    importing
      !NAMEWITHDOLLAR type STRING
    returning
      value(RV_FLAG) type FLAG .
  methods REPLACESYMBOLS
    importing
      !IO_LIST type ref to ZCL_OBJECT_LIST
    returning
      value(RO_LIST) type ref to ZCL_OBJECT_LIST .</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>*&quot;* private components of class ZCL_VARIABLE_STORE
*&quot;* do not include other source files here!!!
private section.

  data VARIABLES type ref to CL_DBA_HASHMAP .

  methods REPLACESYMBOL
    importing
      !IO_OBJECT type ref to OBJECT
    returning
      value(RO_OBJECT) type ref to OBJECT .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="VARIABLES" VERSION="1" LANGU="E" DESCRIPT="ABAP HashMap" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_DBA_HASHMAP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="CONTAINSVALUEFOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="CONTAINSVALUEFOR" SCONAME="NAMEWITHDOLLAR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="CONTAINSVALUEFOR" SCONAME="RV_FLAG" VERSION="1" LANGU="E" DESCRIPT="General Flag" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>METHOD containsvaluefor.
  DATA: name TYPE string,
        firstchar TYPE string,
        isinmap TYPE flag.

  CHECK namewithdollar IS NOT INITIAL.

  firstchar = namewithdollar+0(1).
  CHECK firstchar EQ &apos;$&apos;.

  name = namewithdollar+1.
  isinmap = variables-&gt;contains_key( name ).
  CHECK isinmap EQ abap_true.
  rv_flag = abap_true.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="GETSTORED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="GETSTORED" SCONAME="NAMEWITHDOLLAR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="GETSTORED" SCONAME="RO_OBJ" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDBY="TETREAUL_SAP" CHANGEDON="20140804" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="OBJECT"/>
   <source>METHOD getstored.
  DATA: name TYPE string.
  name = namewithdollar+1.
  ro_obj = variables-&gt;get_object( name ).
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="REPLACESYMBOL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="REPLACESYMBOL" SCONAME="IO_OBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="OBJECT"/>
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="REPLACESYMBOL" SCONAME="RO_OBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="OBJECT"/>
   <source>METHOD replacesymbol.
  DATA: typedesc TYPE REF TO cl_abap_typedescr.

  typedesc = cl_abap_typedescr=&gt;describe_by_object_ref( io_object ).

  if typedesc-&gt;absolute_name EQ &apos;\CLASS=ZCL_STRING&apos;.

  endif.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="REPLACESYMBOLS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="REPLACESYMBOLS" SCONAME="IO_LIST" VERSION="1" LANGU="E" DESCRIPT="List" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="REPLACESYMBOLS" SCONAME="RO_LIST" VERSION="1" LANGU="E" DESCRIPT="List" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_OBJECT_LIST"/>
   <source>METHOD replacesymbols.
  DATA: lo_obj TYPE ref to object.
  FIELD-SYMBOLS: &lt;obj&gt; TYPE ref to object.

  CREATE OBJECT ro_list.

  LOOP AT io_list-&gt;list ASSIGNING &lt;obj&gt;.
    lo_obj = replacesymbol( &lt;obj&gt; ).
    ro_list-&gt;add( lo_obj ).
  ENDLOOP.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="SETSYMBOL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="SETSYMBOL" SCONAME="NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_VARIABLE_STORE" CMPNAME="SETSYMBOL" SCONAME="VALUE" VERSION="1" LANGU="E" DESCRIPT="Method Execution Result" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140804" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_METHOD_EXECUTION_RESULT"/>
   <source>METHOD setsymbol.
  variables-&gt;put_object( key = name value = value ).
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_STRING" VERSION="1" LANGU="E" DESCRIPT="String Class" UUID="537A462700AB0C30E10080000A01314D" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_STRING definition
  public
  final
  create public .

*&quot;* public components of class ZCL_STRING
*&quot;* do not include other source files here!!!
public section.

  data STRING type STRING .

  methods CONSTRUCTOR
    importing
      !STRING type STRING .</publicSection>
  <protectedSection>*&quot;* protected components of class ZCL_STRING
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZCL_STRING
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
  <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_STRING" CMPNAME="STRING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_STRING" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_STRING" CMPNAME="CONSTRUCTOR" SCONAME="STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="TETREAUL_SAP" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD constructor.
  me-&gt;string = string.
ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <FUGR SPRAS="E" AREA="Z_SLIM" AREAT="ABAP SLIM RFC">
  <mainprogram NAME="SAPLZ_SLIM" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" CNAM="TETREAUL_SAP" CDAT="20140513" UNAM="TETREAUL_SAP" UDAT="20140519" VERN="000003" RMAND="001" RLOAD="E" FIXPT="X" SDATE="20140630" STIME="141318" IDATE="20140519" ITIME="235726" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZ_SLIMTOP.                        &quot; Global Data
  INCLUDE LZ_SLIMUXX.                        &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZ_SLIMF...                        &quot; Subroutines
* INCLUDE LZ_SLIMO...                        &quot; PBO-Modules
* INCLUDE LZ_SLIMI...                        &quot; PAI-Modules
* INCLUDE LZ_SLIME...                        &quot; Events
* INCLUDE LZ_SLIMP...                        &quot; Local class implement.
* INCLUDE LZ_SLIMT99.                        &quot; ABAP Unit tests</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZ_SLIMTOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" CNAM="TETREAUL_SAP" CDAT="20140513" UNAM="TETREAUL_SAP" UDAT="20140519" VERN="000003" RMAND="001" FIXPT="X" SDATE="20140519" STIME="235726" IDATE="20140519" ITIME="235726" LDBNAME="D$S" UCCHECK="X">
    <include_source>FUNCTION-POOL Z_SLIM.                       &quot;MESSAGE-ID ..

* INCLUDE LZ_SLIMD...                        &quot; Local class definition</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="Z_ABAP_SLIM_RFC" REMOTE="R" STEXT="ABAP Slim RFC">
    <importing PARAMETER="INSTRUCTIONS" TYP="STRING"/>
    <exporting PARAMETER="RESULTS" TYP="STRING"/>
    <exceptions EXCEPTION="SYNTAX_ERROR"/>
    <documentation PARAMETER="INSTRUCTIONS" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="RESULTS" KIND="P" INDEX=" 002"/>
    <documentation PARAMETER="SYNTAX_ERROR" KIND="X" INDEX=" 003"/>
    <fm_source>TRY.
      results = zcl_slim=&gt;main( instructions ).
    CATCH zcx_syntax_error.
      RAISE syntax_error.
  ENDTRY.</fm_source>
   </functionmodule>
  </functionmodules>
 </FUGR>
</nugget>
